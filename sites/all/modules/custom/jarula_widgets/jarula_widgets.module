<?php
/**
 * @file
 * Code for the Jarula Widgets.
 */

function jarula_widgets_form_alter(&$form, &$form_state, $form_id) {

	if (isset($form['#entity_type']) && $form['#entity_type'] == 'fieldable_panels_pane') {
		$form['link'] = NULL;
		$form['view_mode'] = NULL;
	}

	if ($form_id == 'views_exposed_form' && $form['#id'] == 'views-exposed-form-search-db-search-db') {
		$form['palabra']['#attributes']['placeholder'] = 'Ingrese su bÃºsqueda';
	}

}

function jarula_widgets_ctools_plugin_directory($owner, $plugin_type) {

	if (($owner == 'ctools' && $plugin_type == 'content_types') || ($owner == 'panels' && $plugin_type == "layouts")) {
		return "plugins/$plugin_type";
	}elseif ($owner == 'vud') {
  		return "plugins/$plugin_type";
	}
}

function jarula_widgets_entity_info_alter(&$entity_info) {

	$entity_info['fieldable_panels_pane']['bundles']['widget_image'] = array(
			'label' => 'Widget Image',
			'category' => 'Jarula Widgets',
			'pane top level' => TRUE, // set to true to make this show as a top level icon
			//'pane icon' => '/path/to/custom/icon/for/this/pane.png',
			'admin' => array(
			  'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
			  'bundle argument' => 4,
			  // Note that this has all _ replaced with - from the bundle name.
			  'real path' => 'admin/structure/fieldable-panels-panes/manage/widget_image',
			  'access arguments' => array('Administer content'),
		),
	);

        $entity_info['fieldable_panels_pane']['bundles']['widget_text'] = array(
                        'label' => 'Widget Texto',
                        'category' => 'Jarula Widgets',
                        'pane top level' => TRUE, // set to true to make this show as a top level icon
                        //'pane icon' => '/path/to/custom/icon/for/this/pane.png',
                        'admin' => array(
                          'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
                          'bundle argument' => 4,
                          // Note that this has all _ replaced with - from the bundle name.
                          'real path' => 'admin/structure/fieldable-panels-panes/manage/widget_text',
                          'access arguments' => array('Administer content'),
                ),
        );

        $entity_info['fieldable_panels_pane']['bundles']['widget_profile'] = array(
                        'label' => 'Widget Perfil',
                        'category' => 'Jarula Widgets',
                        'pane top level' => TRUE, // set to true to make this show as a top level icon
                        //'pane icon' => '/path/to/custom/icon/for/this/pane.png',
                        'admin' => array(
                          'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
                          'bundle argument' => 4,
                          // Note that this has all _ replaced with - from the bundle name.
                          'real path' => 'admin/structure/fieldable-panels-panes/manage/widget_profile',
                          'access arguments' => array('Administer content'),
                ),
        );

        $entity_info['fieldable_panels_pane']['bundles']['widget_link'] = array(
                        'label' => 'Widget Link',
                        'category' => 'Jarula Widgets',
                        'pane top level' => TRUE, // set to true to make this show as a top level icon
                        //'pane icon' => '/path/to/custom/icon/for/this/pane.png',
                        'admin' => array(
                          'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
                          'bundle argument' => 4,
                          // Note that this has all _ replaced with - from the bundle name.
                          'real path' => 'admin/structure/fieldable-panels-panes/manage/widget_link',
                          'access arguments' => array('Administer content'),
                ),
        );

        $entity_info['fieldable_panels_pane']['bundles']['widget_itemslist'] = array(
                        'label' => 'Widget Items List',
                        'category' => 'Jarula Widgets',
                        'pane top level' => TRUE, // set to true to make this show as a top level icon
                        //'pane icon' => '/path/to/custom/icon/for/this/pane.png',
                        'admin' => array(
                          'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
                          'bundle argument' => 4,
                          // Note that this has all _ replaced with - from the bundle name.
                          'real path' => 'admin/structure/fieldable-panels-panes/manage/widget_itemslist',
                          'access arguments' => array('Administer content'),
                ),
        );

        $entity_info['fieldable_panels_pane']['bundles']['widget_info'] = array(
                        'label' => 'Widget Info',
                        'category' => 'Jarula Widgets',
                        'pane top level' => TRUE, // set to true to make this show as a top level icon
                        //'pane icon' => '/path/to/custom/icon/for/this/pane.png',
                        'admin' => array(
                          'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
                          'bundle argument' => 4,
                          // Note that this has all _ replaced with - from the bundle name.
                          'real path' => 'admin/structure/fieldable-panels-panes/manage/widget_info',
                          'access arguments' => array('Administer content'),
                ),
        );

}

function jarula_widgets_preprocess_panels_pane(&$vars) {

	$entity = &$vars['content'];
	$vars['title'] = '';

	if ( isset($entity['#bundle']) && $entity['#entity_type'] == 'fieldable_panels_pane') {

		switch ($entity['#bundle']) {

			case 'widget_image':
                                
				$lightbox = $entity['field_lightbox'][0]['#markup'];

				foreach($entity['field_image']['#items'] as $key => $image) {
					$imageRendered = theme( 'image_style', array('style_name' => 'small_wide', 'path' => $image['uri'], 'alt' => $image['alt'], 'title' => $image['title']));
					if(!empty($lightbox)){
						$imageRendered = l($imageRendered, file_create_url($image['uri']), array('html' => 'true', 'attributes' => array('title' => $image['title'], 'alt' => $image['alt'], 'class' => 'colorbox-load', 'rel' => 'gallery')));
					};

					$images[] = $imageRendered;

				}

				$vars['content'] = theme('widget_image', array('widget_image' => $images));

			break;

			case 'widget_text':

		                $wrapper = $entity['field_wrapper'][0]['#markup'];

                		$arrayText = array_keys($entity['field_text']);

		                foreach ($arrayText as $item){
                		        if(is_numeric($item)){
                                		$element = $entity['field_text'][$item];
		                                foreach($element['entity']['field_collection_item'] as $fieldCollection){
		                                        (isset($fieldCollection['title_field'])) ? $title = '<h2>' . $fieldCollection['title_field'][0]['#markup'] . '</h2>' : $title = '';
		                                        (isset($fieldCollection['field_description'])) ? $description = '<p>' . $fieldCollection['field_description'][0]['#markup'] . '</p>' : $description = '';
		                                        $texts[] = array(
		                                                'title' => $title,
		                                                'description' => $description,
                		                        );
                                		}
		                        }
		                }
	
        		        $widget_text = array('wrapper' => $wrapper, 'texts' => $texts);

		                $vars['content'] = theme('widget_text', array('widget_text' => $widget_text));

			break;

			case 'widget_profile':

				$image = theme( 'image_style', array('style_name' => 'small_wide', 'path' => $entity['field_image'][0]['#item']['uri'], 'alt' => $entity['field_image'][0]['#item']['alt'], 'title' => $entity['field_image'][0]['#item']['title']));

				$name = '<h2>'.$entity['title_field'][0]['#markup'].'</h2>';

				if(isset($entity['field_text'][0])){

					$arrayText = array_keys($entity['field_text']);

	                                foreach ($arrayText as $item){
                                	        if(is_numeric($item)){
                        	                        $element = $entity['field_text'][$item];
                	                                foreach($element['entity']['field_collection_item'] as $fieldCollection){
        	                                                (isset($fieldCollection['title_field'])) ? $title = '<h3>' . $fieldCollection['title_field'][0]['#markup'] . '</h3>' : $title = '';
	                                                        (isset($fieldCollection['field_description'])) ? $description = '<p>' . $fieldCollection['field_description'][0]['#markup'] . '</p>' : $description = '';
                                                	        $texts[] = array(
                                        	                        'title' => $title,
                                	                                'description' => $description,
                        	                                );
                	                                }
        	                                }
	                                }
				} else {
					$texts = NULL;
				}

				$widget_profile = array('image' => $image, 'name' => $name, 'texts' => $texts);
	
				$vars['content'] = theme('widget_profile', array('widget_profile' => $widget_profile));

			break;

			case 'widget_link':

                                $arrayText = array_keys($entity['field_link']);

                                foreach ($arrayText as $item){
                                        if(is_numeric($item)){
                                                $element = $entity['field_link'][$item];
                                                foreach($element['entity']['field_collection_item'] as $fieldCollection){
	                                              	if(isset($fieldCollection['field_image'])) {
								$image = theme( 'image_style', array('style_name' => 'small_square', 'path' => $fieldCollection['field_image'][0]['#item']['uri'], 'alt' => $fieldCollection['field_image'][0]['#item']['alt'], 'title' => $fieldCollection['field_image'][0]['#item']['title']));
								if(isset($fieldCollection['field_href'])) {
									$image = l($image, $fieldCollection['field_href'][0]['#element']['url'], array('html' => 'true', 'attributes' => array('title' => $fieldCollection['field_image'][0]['#item']['title'], 'alt' => $fieldCollection['field_image'][0]['#item']['alt'])));
								}
							}
							
							$title = NULL;

							if(isset($fieldCollection['title_field'])){
								$title = '<div class="title">'.$fieldCollection['title_field'][0]['#markup'].'</div>';
							}
							$widget_link[] = array('link' => $image, 'title' =>$title);
                                        	}
					}
                                }

				$class = $entity['field_class'][0]['#markup'];

                                $vars['content'] = theme('widget_link', array('widget_link' => $widget_link, 'class' => $class));

			break;

			case 'widget_itemslist':

				$view = views_get_view('jarula_widgets');
				$view->set_display('items_list');
				if(!empty($entity['field_widgettype']['#items'][0]['value'])) {
					$nid = arg(1);
					$view->set_arguments(array($nid));
					$view->set_items_per_page(3);
				}
				$view->execute();

				foreach($view->result as $key => $result) {

					$title = $result->node_title;

					foreach($result->field_field_address as $adress) {
						$key = $adress['raw']['value'];
						$street = $adress['rendered']['entity']['field_collection_item'][$key]['field_street']['#items'][0]['safe_value'];
					}

					for($i=0;$i<1;$i++){
                                                $key = $result->field_field_slide[0]['raw']['value'];
						$uri = $result->field_field_slide[0]['rendered']['entity']['field_collection_item'][$key]['field_image']['#items'][0]['uri'];
                                        }
					$image = theme('image_style', array('style_name' => 'medium_wide', 'path' => $uri, 'alt' => $title));

					$status = isset($result->field_field_status[0]['rendered']['#markup']) ? theme('html_tag', array('element' => array('#tag' => 'span','#attributes' => array('class' => 'label'),'#value' => $result->field_field_status[0]['rendered']['#markup']))) : NULL;

					$destination = url('node/'.$result->nid);

					$widget_itemslist[] = array('title' => $title, 'street' => $street, 'image' => $image, 'status' => $status, 'destination' => $destination);

				}
	
                                $vars['content'] = theme('widget_itemslist', array('widget_itemslist' => $widget_itemslist));

			break;

			case 'widget_info':

				$nid = arg(1);
				$node = node_load($nid);

				$title = $node->title;
				$info = field_get_items('node', $node, 'field_info');
				$info = isset($info[0]['value']) ? $info[0]['value'] : NULL;
				$status = field_get_items('node', $node, 'field_status');
				$status = isset($status[0]['value']) ? theme('html_tag', array('element' => array('#tag' => 'span','#attributes' => array('class' => 'label'),'#value' => $status[0]['value']))) : NULL;
				$address = field_get_items('node', $node, 'field_address');
				foreach($address as $street) {
                                	$eid = $street['value'];
					$address = entity_load('field_collection_item', array($eid));
					$address = $address[$eid]->field_street['und'][0]['safe_value'];
                                }

				$widget_info = array('title' => $title, 'info' => $info, 'status' => $status, 'street' => $address);

				$vars['content'] = theme('widget_info', array('widget_info' => $widget_info));

			break;
        	}
	}
}


function jarula_widgets_theme() {

	return array(
		'widget_image' => array(
			'template' => 'widget-image',
			'path' => drupal_get_path('module', 'jarula_widgets') . '/templates',
		),
                'widget_text' => array(
                        'template' => 'widget-text',
                        'path' => drupal_get_path('module', 'jarula_widgets') . '/templates',
                ),
                'widget_profile' => array(
                        'template' => 'widget-profile',
                        'path' => drupal_get_path('module', 'jarula_widgets') . '/templates',
                ),
                'widget_link' => array(
                        'template' => 'widget-link',
                        'path' => drupal_get_path('module', 'jarula_widgets') . '/templates',
                ),
                'widget_itemslist' => array(
                        'template' => 'widget-itemslist',
                        'path' => drupal_get_path('module', 'jarula_widgets') . '/templates',
                ),
                'widget_info' => array(
                        'template' => 'widget-info',
                        'path' => drupal_get_path('module', 'jarula_widgets') . '/templates',
                ),

        );

}
