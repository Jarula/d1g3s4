<?php
/**
 * @file
 * Code for the Jarula Widgets.
 */

function jarula_widgets_form_alter(&$form, &$form_state, $form_id) {

	if (isset($form['#entity_type']) && $form['#entity_type'] == 'fieldable_panels_pane') {
		$form['link'] = NULL;
		$form['view_mode'] = NULL;
	}

	if ($form_id == 'views_exposed_form' && $form['#id'] == 'views-exposed-form-search-db-search-db') {
		$form['palabra']['#attributes']['placeholder'] = 'Ingrese su bÃºsqueda';
	}

        if ($form_id == 'webform_client_form_6' && $form['#id'] == 'webform-client-form-6') {
		$required = $form['submitted']['nombre_y_apellido']['#required'];
		if($required == '1'){ $required = ' *'; } else { $required = ''; };
                $form['submitted']['nombre_y_apellido']['#attributes']['placeholder'] = $form['submitted']['nombre_y_apellido']['#title'].$required;

                $required = $form['submitted']['email']['#required'];
                if($required == '1'){ $required = ' *'; } else { $required = ''; };
                $form['submitted']['email']['#attributes']['placeholder'] = $form['submitted']['email']['#title'].$required;

                $required = $form['submitted']['telefono']['#required'];
                if($required == '1'){ $required = ' *'; } else { $required = ''; };
                $form['submitted']['telefono']['#attributes']['placeholder'] = $form['submitted']['telefono']['#title'].$required;

                $required = $form['submitted']['mensaje']['#required'];
                if($required == '1'){ $required = ' *'; } else { $required = ''; };
                $form['submitted']['mensaje']['#attributes']['placeholder'] = $form['submitted']['mensaje']['#title'].$required;

		$nid = arg(1);
		$node = node_load($nid);
		$node = $node->type;
		if (isset($node) && $node == 'card') {
			$form['submitted']['nombre_y_apellido']['#prefix'] = '<div class="grid-35 mobile-grid-100">';
                        $form['submitted']['telefono']['#suffix'] = '</div>';
			$form['submitted']['mensaje']['#prefix'] = '<div class="grid-50 mobile-grid-100">';
                        $form['submitted']['mensaje']['#suffix'] = '</div>';
			if (isset($form['captcha'])) {
				$form['captcha']['#attributes']['placeholder'] = 'Introduzca el codigo:';
				$form['captcha']['#prefix'] = '<div class="grid-15 mobile-grid-100">';
			}
			else {
				$form['actions']['#prefix'] = '<div class="grid-15 mobile-grid-100">';
			}
			$form['actions']['#suffix'] = '</div>';
		}

        }

}

function jarula_widgets_ctools_plugin_directory($owner, $plugin_type) {

	if (($owner == 'ctools' && $plugin_type == 'content_types') || ($owner == 'panels' && $plugin_type == "layouts")) {
		return "plugins/$plugin_type";
	}elseif ($owner == 'vud') {
  		return "plugins/$plugin_type";
	}
}

function jarula_widgets_entity_info_alter(&$entity_info) {

	$entity_info['fieldable_panels_pane']['bundles']['widget_image'] = array(
			'label' => 'Widget Image',
			'category' => 'Jarula Widgets',
			'pane top level' => TRUE, // set to true to make this show as a top level icon
			//'pane icon' => '/path/to/custom/icon/for/this/pane.png',
			'admin' => array(
			  'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
			  'bundle argument' => 4,
			  // Note that this has all _ replaced with - from the bundle name.
			  'real path' => 'admin/structure/fieldable-panels-panes/manage/widget_image',
			  'access arguments' => array('Administer content'),
		),
	);

        $entity_info['fieldable_panels_pane']['bundles']['widget_text'] = array(
                        'label' => 'Widget Texto',
                        'category' => 'Jarula Widgets',
                        'pane top level' => TRUE, // set to true to make this show as a top level icon
                        //'pane icon' => '/path/to/custom/icon/for/this/pane.png',
                        'admin' => array(
                          'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
                          'bundle argument' => 4,
                          // Note that this has all _ replaced with - from the bundle name.
                          'real path' => 'admin/structure/fieldable-panels-panes/manage/widget_text',
                          'access arguments' => array('Administer content'),
                ),
        );

        $entity_info['fieldable_panels_pane']['bundles']['widget_profile'] = array(
                        'label' => 'Widget Perfil',
                        'category' => 'Jarula Widgets',
                        'pane top level' => TRUE, // set to true to make this show as a top level icon
                        //'pane icon' => '/path/to/custom/icon/for/this/pane.png',
                        'admin' => array(
                          'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
                          'bundle argument' => 4,
                          // Note that this has all _ replaced with - from the bundle name.
                          'real path' => 'admin/structure/fieldable-panels-panes/manage/widget_profile',
                          'access arguments' => array('Administer content'),
                ),
        );

        $entity_info['fieldable_panels_pane']['bundles']['widget_link'] = array(
                        'label' => 'Widget Link',
                        'category' => 'Jarula Widgets',
                        'pane top level' => TRUE, // set to true to make this show as a top level icon
                        //'pane icon' => '/path/to/custom/icon/for/this/pane.png',
                        'admin' => array(
                          'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
                          'bundle argument' => 4,
                          // Note that this has all _ replaced with - from the bundle name.
                          'real path' => 'admin/structure/fieldable-panels-panes/manage/widget_link',
                          'access arguments' => array('Administer content'),
                ),
        );

        $entity_info['fieldable_panels_pane']['bundles']['widget_itemslist'] = array(
                        'label' => 'Widget Items List',
                        'category' => 'Jarula Widgets',
                        'pane top level' => TRUE, // set to true to make this show as a top level icon
                        //'pane icon' => '/path/to/custom/icon/for/this/pane.png',
                        'admin' => array(
                          'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
                          'bundle argument' => 4,
                          // Note that this has all _ replaced with - from the bundle name.
                          'real path' => 'admin/structure/fieldable-panels-panes/manage/widget_itemslist',
                          'access arguments' => array('Administer content'),
                ),
        );

        $entity_info['fieldable_panels_pane']['bundles']['widget_info'] = array(
                        'label' => 'Widget Info',
                        'category' => 'Jarula Widgets',
                        'pane top level' => TRUE, // set to true to make this show as a top level icon
                        //'pane icon' => '/path/to/custom/icon/for/this/pane.png',
                        'admin' => array(
                          'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
                          'bundle argument' => 4,
                          // Note that this has all _ replaced with - from the bundle name.
                          'real path' => 'admin/structure/fieldable-panels-panes/manage/widget_info',
                          'access arguments' => array('Administer content'),
                ),
        );

        $entity_info['fieldable_panels_pane']['bundles']['widget_slider'] = array(
                        'label' => 'Widget Slideshow',
                        'category' => 'Jarula Widgets',
                        'pane top level' => TRUE, // set to true to make this show as a top level icon
                        //'pane icon' => '/path/to/custom/icon/for/this/pane.png',
                        'admin' => array(
                          'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
                          'bundle argument' => 4,
                          // Note that this has all _ replaced with - from the bundle name.
                          'real path' => 'admin/structure/fieldable-panels-panes/manage/widget_slider',
                          'access arguments' => array('Administer content'),
                ),
        );

        $entity_info['fieldable_panels_pane']['bundles']['widget_map'] = array(
                        'label' => 'Widget Map',
                        'category' => 'Jarula Widgets',
                        'pane top level' => TRUE, // set to true to make this show as a top level icon
                        //'pane icon' => '/path/to/custom/icon/for/this/pane.png',
                        'admin' => array(
                          'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
                          'bundle argument' => 4,
                          // Note that this has all _ replaced with - from the bundle name.
                          'real path' => 'admin/structure/fieldable-panels-panes/manage/widget_map',
                          'access arguments' => array('Administer content'),
                ),
        );

        $entity_info['fieldable_panels_pane']['bundles']['widget_form'] = array(
                        'label' => 'Widget Form',
                        'category' => 'Jarula Widgets',
                        'pane top level' => TRUE, // set to true to make this show as a top level icon
                        //'pane icon' => '/path/to/custom/icon/for/this/pane.png',
                        'admin' => array(
                          'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
                          'bundle argument' => 4,
                          // Note that this has all _ replaced with - from the bundle name.
                          'real path' => 'admin/structure/fieldable-panels-panes/manage/widget_form',
                          'access arguments' => array('Administer content'),
                ),
        );

        $entity_info['fieldable_panels_pane']['bundles']['widget_sketch'] = array(
                        'label' => 'Widget Sketch',
                        'category' => 'Jarula Widgets',
                        'pane top level' => TRUE, // set to true to make this show as a top level icon
                        //'pane icon' => '/path/to/custom/icon/for/this/pane.png',
                        'admin' => array(
                          'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
                          'bundle argument' => 4,
                          // Note that this has all _ replaced with - from the bundle name.
                          'real path' => 'admin/structure/fieldable-panels-panes/manage/widget_sketch',
                          'access arguments' => array('Administer content'),
                ),
        );

        $entity_info['fieldable_panels_pane']['bundles']['widget_search'] = array(
                        'label' => 'Widget Search',
                        'category' => 'Jarula Widgets',
                        'pane top level' => TRUE, // set to true to make this show as a top level icon
                        //'pane icon' => '/path/to/custom/icon/for/this/pane.png',
                        'admin' => array(
                          'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
                          'bundle argument' => 4,
                          // Note that this has all _ replaced with - from the bundle name.
                          'real path' => 'admin/structure/fieldable-panels-panes/manage/widget_search',
                          'access arguments' => array('Administer content'),
                ),
        );

        $entity_info['fieldable_panels_pane']['bundles']['widget_custom_card_list'] = array(
                        'label' => 'Widget Custom Card List',
                        'category' => 'Jarula Widgets',
                        'pane top level' => TRUE, // set to true to make this show as a top level icon
                        //'pane icon' => '/path/to/custom/icon/for/this/pane.png',
                        'admin' => array(
                          'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
                          'bundle argument' => 4,
                          // Note that this has all _ replaced with - from the bundle name.
                          'real path' => 'admin/structure/fieldable-panels-panes/manage/widget_custom_card_list',
                          'access arguments' => array('Administer content'),
                ),
        );

        $entity_info['fieldable_panels_pane']['bundles']['widget_background_slider'] = array(
                        'label' => 'Widget Background Slider',
                        'category' => 'Jarula Widgets',
                        'pane top level' => TRUE, // set to true to make this show as a top level icon
                        //'pane icon' => '/path/to/custom/icon/for/this/pane.png',
                        'admin' => array(
                          'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
                          'bundle argument' => 4,
                          // Note that this has all _ replaced with - from the bundle name.
                          'real path' => 'admin/structure/fieldable-panels-panes/manage/widget_background_slider',
                          'access arguments' => array('Administer content'),
                ),
        );

}

function jarula_widgets_preprocess_panels_pane(&$vars) {

	$entity = &$vars['content'];

	if ( isset($entity['#bundle']) && $entity['#entity_type'] == 'fieldable_panels_pane') {

		switch ($entity['#bundle']) {

			case 'widget_image':
                                
				$lightbox = $entity['field_lightbox'][0]['#markup'];

				foreach($entity['field_image']['#items'] as $key => $image) {
					$imageRendered = theme( 'image_style', array('style_name' => 'small_wide', 'path' => $image['uri'], 'alt' => $image['alt'], 'title' => $image['title']));
					if(!empty($lightbox)){
						$imageRendered = l($imageRendered, file_create_url($image['uri']), array('html' => 'true', 'attributes' => array('title' => $image['title'], 'alt' => $image['alt'], 'class' => 'colorbox-load', 'rel' => 'gallery')));
					};

					$images[] = $imageRendered;

				}

				$vars['content'] = theme('widget_image', array('widget_image' => $images));

			break;

			case 'widget_text':

		                $wrapper = $entity['field_wrapper'][0]['#markup'];

                		$arrayText = array_keys($entity['field_text']);

		                foreach ($arrayText as $item){
                		        if(is_numeric($item)){
                                		$element = $entity['field_text'][$item];
		                                foreach($element['entity']['field_collection_item'] as $fieldCollection){
                                                        (isset($fieldCollection['field_wtext_class'])) ? $class =  'class="'.$fieldCollection['field_wtext_class'][0]['#markup'].'"' : $class = '';
		                                        (isset($fieldCollection['title_field'])) ? $title = '<h2 '.$class.'>' . $fieldCollection['title_field'][0]['#markup'] . '</h2>' : $title = '';
		                                        (isset($fieldCollection['field_description'])) ? $description = '<p '.$class.'>' . $fieldCollection['field_description'][0]['#markup'] . '</p>' : $description = '';
		                                        $texts[] = array(
		                                                'title' => $title,
		                                                'description' => $description,
                		                        );
                                		}
		                        }
		                }
	
        		        $widget_text = array('wrapper' => $wrapper, 'texts' => $texts);

		                $vars['content'] = theme('widget_text', array('widget_text' => $widget_text));

			break;

			case 'widget_profile':

				$vars['title'] = '';

				$image = theme( 'image_style', array('style_name' => 'small_less_wide', 'path' => $entity['field_image'][0]['#item']['uri'], 'alt' => $entity['field_image'][0]['#item']['alt'], 'title' => $entity['field_image'][0]['#item']['title']));

				$name = '<h2>'.$entity['title_field'][0]['#markup'].'</h2>';

				if(isset($entity['field_text'][0])){

					$arrayText = array_keys($entity['field_text']);

	                                foreach ($arrayText as $item){
                                	        if(is_numeric($item)){
                        	                        $element = $entity['field_text'][$item];
                	                                foreach($element['entity']['field_collection_item'] as $fieldCollection){
        	                                                (isset($fieldCollection['title_field'])) ? $title = '<h3>' . $fieldCollection['title_field'][0]['#markup'] . '</h3>' : $title = '';
	                                                        (isset($fieldCollection['field_description'])) ? $description = '<p>' . $fieldCollection['field_description'][0]['#markup'] . '</p>' : $description = '';
                                                	        $texts[] = array(
                                        	                        'title' => $title,
                                	                                'description' => $description,
                        	                                );
                	                                }
        	                                }
	                                }
				} else {
					$texts = NULL;
				}

				$widget_profile = array('image' => $image, 'name' => $name, 'texts' => $texts);
	
				$vars['content'] = theme('widget_profile', array('widget_profile' => $widget_profile));

			break;

			case 'widget_link':

                                $arrayText = array_keys($entity['field_link']);

                                foreach ($arrayText as $item){
                                        if(is_numeric($item)){
                                                $element = $entity['field_link'][$item];
                                                foreach($element['entity']['field_collection_item'] as $fieldCollection){
	                                              	if(isset($fieldCollection['field_image'])) {
								$image = theme( 'image_style', array('style_name' => 'small_square', 'path' => $fieldCollection['field_image'][0]['#item']['uri'], 'alt' => $fieldCollection['field_image'][0]['#item']['alt'], 'title' => $fieldCollection['field_image'][0]['#item']['title']));
								if(isset($fieldCollection['field_href'])) {
									$image = l($image, $fieldCollection['field_href'][0]['#element']['url'], array('html' => 'true', 'attributes' => array('title' => $fieldCollection['field_image'][0]['#item']['title'], 'alt' => $fieldCollection['field_image'][0]['#item']['alt'])));
								}
							}
							
							$title = NULL;

							if(isset($fieldCollection['title_field'])){
								$title = '<div class="title">'.$fieldCollection['title_field'][0]['#markup'].'</div>';
							}
							$widget_link[] = array('link' => $image, 'title' =>$title);
                                        	}
					}
                                }

				$class = $entity['field_class'][0]['#markup'];

                                $vars['content'] = theme('widget_link', array('widget_link' => $widget_link, 'class' => $class));

			break;

			case 'widget_itemslist':

				$view = views_get_view('jarula_widgets');
				$view->set_display('items_list');
				if($entity['field_widgettype']['#items'][0]['value'] != '0') {
					$nid = arg(1);
					$view->set_arguments(array($nid, 'all'));
					$view->set_items_per_page(3);
				} else {
					$tid = arg(2);
					$view->set_arguments(array('all', $tid));
				}
                                if($entity['field_widgettype']['#items'][0]['value'] != '0') {
					$view->pre_execute();
					$view->sort = array_reverse($view->sort, true);
				}
				$view->execute();

				foreach($view->result as $key => $result) {

					$title = $result->node_title;

					foreach($result->field_field_address as $adress) {
						$key = $adress['raw']['value'];
						$street = $adress['rendered']['entity']['field_collection_item'][$key]['field_street']['#items'][0]['safe_value'];
					}

					$image = theme('image_style', array('style_name' => 'medium_wide', 'path' => $result->field_field_thumbnail_image[0]['raw']['uri'], 'alt' => $title));

					if (isset($result->field_field_status[0]['rendered']['#markup'])) {
			                        $status_type = $result->field_field_status[0]['rendered']['#markup'];
                        			switch ($status_type) {
			                            case '100% vendido':
                        			        $status_type = "label light_green";
			                                break;
                        			    case 'Ãltimas unidades':
			                                $status_type = "label yellow";
                        			        break;
			                            case 'Nuevo':
                        			        $status_type = "label dark_green";
			                                break;
                        			    case 'MÃ¡s solicitado':
			                                $status_type = "label blue";
                        			        break;
			                        }

						if ($status_type != 'Ninguno') {
				                        $status = theme('html_tag', array('element' => array('#tag' => 'span','#attributes' => array('class' => $status_type),'#value' => $result->field_field_status[0]['rendered']['#markup'])));
						} else {
							$status = NULL;
						}
			                }

					$destination = url('node/'.$result->nid);

					$widget_itemslist[] = array('title' => $title, 'street' => $street, 'image' => $image, 'status' => $status, 'destination' => $destination);
				}

				if(empty($widget_itemslist)) {
					$vars['content'] = 'No hay resultados...';
				} else {
                                	$vars['content'] = theme('widget_itemslist', array('widget_itemslist' => $widget_itemslist));
				}

			break;

			case 'widget_info':

				$nid = arg(1);
				$node = node_load($nid);

				$title = $node->title;
				$info = field_get_items('node', $node, 'field_info');
				$info = isset($info[0]['value']) ? $info[0]['value'] : NULL;
				$status = field_get_items('node', $node, 'field_status');
				if ($status[0]['value'] != 'Ninguno') {
				$status = isset($status[0]['value']) ? theme('html_tag', array('element' => array('#tag' => 'span','#attributes' => array('class' => 'label'),'#value' => $status[0]['value']))) : NULL;
				} else {
				$status = NULL;
				}
				$address = field_get_items('node', $node, 'field_address');
				foreach($address as $street) {
                                	$eid = $street['value'];
					$address = entity_load('field_collection_item', array($eid));
					$address = $address[$eid]->field_street['und'][0]['safe_value'];
                                }

				$widget_info = array('title' => $title, 'info' => $info, 'status' => $status, 'street' => $address);

				$vars['content'] = theme('widget_info', array('widget_info' => $widget_info));

			break;

			case 'widget_slider':

				$currentNode = $entity['field_currentnode'][0]['#markup'];
				$slideArray = $entity['field_slide'];

				if (arg(0) == 'node' && is_numeric(arg(1))) {
					$nid = true;
				}

				if($currentNode && $nid){
					$node = node_load(arg(1));

					$slideshow = field_get_items('node', $node, 'field_slide');
					foreach($slideshow as $slide ) {
						$item = field_collection_item_load(array($slide['value']));

						$image = field_get_items('field_collection_item', $item, 'field_slide_image');
						$image = isset($image[0]) ? $image[0] : NULL;

						$thumbnail = image_style_url('thumnail_slider',$image['uri']);

                                                $image = array(
                                                      'style_name' => 'big_wide_600',
                                                      'path' => $image['uri'],
                                                      'alt' => $image['alt'],
                                                      'title' => $image['title'],
                                                );
                                                $image = theme('image_style', $image);

						$type = field_get_items('field_collection_item', $item, 'field_slidetype');
						$type = isset($type[0]['value']) ? $type[0]['value'] : NULL;
                                                $type = 'type-'.strtolower($type);

						$title = field_get_items('field_collection_item', $item, 'title_field');
						$title = isset($title[0]['safe_value']) ? $title[0]['safe_value'] : NULL;

						$description = field_get_items('field_collection_item', $item, 'field_description');
						$description = isset($description[0]['safe_value']) ? $description[0]['safe_value'] : NULL;

						$link = field_get_items('field_collection_item', $item, 'field_href');
						$link = isset($link[0]['url']) ? $link[0]['url'] : NULL;

                                                $vid = field_get_items('field_collection_item', $item, 'field_video');
                                                $vid = isset($vid[0]['safe_value']) ? $vid[0]['safe_value'] : NULL;
                                                $vid = explode('v=', $vid);
						$vid = $vid[1];
						
						$video = "<iframe width='1280' height='720' src='//www.youtube.com/embed/{$vid}?rel=0' frameborder='0' allowfullscreen></iframe>";
						$preview = "http://img.youtube.com/vi/{$vid}/0.jpg";
						

                                                $slideItems[] = array(
	                                                'type' => $type,
                                                        'image' => $image,
                                                        'title' => $title,
                                                        'description' => $description,
							'thumbnail' => $thumbnail,
                                                        'link' => ($link) ? url($link, array('absolute' => true)) : NULL,
							'video' => $video,
							'preview' => $preview
                                                );

					}

	                                drupal_add_js(drupal_get_path('module', 'jarula_widgets') . '/js/widget_slideshow/jquery.flexslider-min.js', array('scope' => 'footer'));
        	                        drupal_add_js(drupal_get_path('module', 'jarula_widgets') . '/js/widget_slideshow/jquery.easing.js', array('scope' => 'footer'));
				}

			if(isset($slideItems)) {
				$vars['content'] = theme('widget_slider_node', array('widget_slider' => $slideItems));
			} else {
				$vars['content'] = 'No hay contenido para mostrar';
			}

			break;

			case 'widget_map':
				$currentNode = $entity['field_currentnode'][0]['#markup'];
				$nid = false;

                                if (arg(0) == 'node' && is_numeric(arg(1))) {
                                        $nid = true;
                                }

				$multipleNode = $entity['field_multinode'][0]['#markup'];

                                if($currentNode && $nid && !$multipleNode){
					$node = node_load(arg(1));
	                                $address = field_get_items('node', $node, 'field_address');
        	                        $address = isset($address[0]['value']) ? $address[0]['value'] : NULL;
					$address = field_collection_item_load(array($address));

                        	        $street = field_get_items('field_collection_item', $address, 'field_street');
                                	$street = isset($street[0]['safe_value']) ? $street[0]['safe_value'] : NULL;

	                                $city = field_get_items('field_collection_item', $address, 'field_city');
        	                        $city = isset($city[0]['safe_value']) ? $city[0]['safe_value'] : NULL;

                	                $province = field_get_items('field_collection_item', $address, 'field_province');
                        	        $province = isset($province[0]['value']) ? $province[0]['value'] : NULL;

                                        $info = '<h1 class="name">'.$result->node_title.'</h1>';
                                        $info .= '<h2 class="street">'.$street.'</h2>';
                                        $info .= '<strong>'.$city.'</strong></br>'.$province;

					$markersArray[] = array('address' => $street.', '.$city.', '.$province, 'info' => $info);

					$zoom = '16';
                                        $map_size_height = '150px';

					$isMap = true;

				} elseif($multipleNode && !$currentNode) {

                        	        $view = views_get_view('jarula_widgets');
                                	$view->set_display('items_list');
                	                $tid = arg(2);
        	                        $view->set_arguments(array('all' ,$tid));
	                                $view->execute();

					foreach($view->result as $result) {
						$address = field_collection_item_load(array($result->field_field_address[0]['raw']['value']));
						$street = field_get_items('field_collection_item', $address, 'field_street');
                                        	$street = isset($street[0]['safe_value']) ? $street[0]['safe_value'] : NULL;

                                	        $city = field_get_items('field_collection_item', $address, 'field_city');
                        	                $city = isset($city[0]['safe_value']) ? $city[0]['safe_value'] : NULL;

                	                        $province = field_get_items('field_collection_item', $address, 'field_province');
        	                                $province = isset($province[0]['value']) ? $province[0]['value'] : NULL;

						$info = '<h1 class="name">'.$result->node_title.'</h1>';
						$info .= '<h2 class="street">'.$street.'</h2>';
						$info .= '<strong>'.$city.'</strong></br>'.$province;
						$info .= '<a href="'.url('node/'.$result->nid, array('absolute' => true)).'">Ampliar</a>';

						$markersArray[] = array('address' => $street.', '.$city.', '.$province, 'info' => $info);
					}

                                        $zoom = '12';
					$map_size_height = '300px';

					$isMap = true;

				} elseif(!$multipleNode && !$currentNode) {

					$field = $entity['field_address'][0]['entity']['field_collection_item'][$entity['field_address']['#items'][0]['value']];

					if(isset($field)){
	                                        $street = $field['field_street']['#items'][0]['value'];
                                        	$city = $field['field_city']['#items'][0]['value'];
						$province = $field['field_province']['#items'][0]['value'];

						$info = '';

	                                        $markersArray[] = array('address' => $street.', '.$city.', '.$province, 'info' => $info);

	                                        $zoom = '16';
        	                                $map_size_height = '170px';

                	                        $isMap = true;
					}

				}
				if(isset($isMap)) {
//                                      $key = '&key=AIzaSyCvsZaG5p6PLIM4APBrU1IMiYbAe-Ntz_I';
                                        $key = '';
                                        $map_size_width = '100%';
                                        $map_language = 'Spanish';
                                        $maptype = 'google.maps.MapTypeId.ROADMAP';

					foreach($markersArray as $mark){
	                                        $request_url = "http://maps.googleapis.com/maps/api/geocode/xml?address=".$mark['address']."&sensor=true";
                                        	$xml = simplexml_load_file($request_url) or die("url not loading");
                                	        $status = $xml->status;
                        	                if ($status=="OK") {
                	                                $latitude = (string)$xml->result->geometry->location->lat;
        	                                        $longitude = (string)$xml->result->geometry->location->lng;
							$markers[] = array($mark['info'], $latitude, $longitude);
	                                        }
					}

					$array_js = array(
                                                'type' => 'map',
                                                'markers' => $markers,
                                                'zoom' => $zoom,
                                                'width' => $map_size_width,
                                                'height' => $map_size_height,
                                                'maptype' => $maptype,
                                                'language' => $map_language,
                                        );

					$icon = drupal_get_path('theme', 'digesa_theme').'/images/map-icon.png';

                                        drupal_add_js('https://maps.googleapis.com/maps/api/js?v=3.exp&language=' . $map_language . $key . '&sensor=false', 'external');
                                        drupal_add_js(drupal_get_path('module', 'jarula_widgets') . '/js/widget_map/map.js');
                                        drupal_add_js( array('key' => $array_js, 'icon' => $icon), 'setting');
					$output = "<style type='text/css'>#map-canvas img { max-width: none; }</style>";
                                        $output .= "<div class='grid-100 grid-parent'><div id='map-canvas' style='width:" . $map_size_width . "; height: " . $map_size_height . ";' ></div></div>";
//                                        $output .= "<div class=''><div id='map-canvas' style='width:380px; height: " . $map_size_height . ";' ></div></div>";
					$vars['content'] = $output;
				} else {
        	                        $vars['content'] = 'No hay mapa disponible.';
	                        }
					
			break;

			case 'widget_form':

				$nid = arg(1);

				if (arg(0) == 'node' && is_numeric($nid)) {
					$nid = arg(1);
					$node = node_load($nid);
					$title = theme('html_tag', array('element' => array('#tag' => 'h2', '#attributes' => array('class' => 'grid-100'), '#value' => t('Hacenos tu consulta acerca de ') . theme('html_tag', array('element' => array('#tag' => 'strong', '#value' => $node->title))))));
				}

				$nid = $entity['field_wform_formulario']['#items'][0]['target_id'];

				if (isset($nid) && is_numeric($nid)) {
					$node = node_load($nid);
				       	webform_node_view($node,'full');
					$form = theme_webform_view($node->content);

					$vars['content'] = theme('widget_form', array('title' => $title, 'form' => $form));
                                }
			
			break;

			case 'widget_sketch':
			
                                if (arg(0) == 'node' && is_numeric(arg(1))) {
                                        $nid = arg(1);
					$node = node_load($nid);

					if(isset($node->field_sketch['und'])){
					
						$images = array();
						$fieldCollection = field_get_items('node', $node, 'field_sketch');
						foreach($fieldCollection as $eid) {
							$eid = $eid['value'];
							$sketch = entity_load('field_collection_item', array($eid));
							$title = $sketch[$eid]->field_jw_ws_name['und'][0]['safe_value'];
							$image = $sketch[$eid]->field_jw_ws_image['und'][0];
							$imageURI = file_create_url($image['uri']);
							$image = theme('image_style', array(
									'style_name' => 'tiny_square',
								 	'path' => $image['uri'],
									'alt' => $image['alt'],
									'title' => $image['title']));
							$image = l($image, $imageURI, array('attributes' => array('class' => 'colorbox-load', 'rel' => 'gallery'), 'html' => TRUE));
						
							$images[] = $image;
						}


						drupal_add_js(drupal_get_path('module', 'jarula_widgets') . '/js/widget_sketch/content.js');

						$vars['content'] = theme('widget_sketch', array('images' => $images));
					}

                                }

			break;

			case 'widget_search':

				$view = views_get_view('search_db');
                                $view->set_display('search_db');
                                $view->execute();

				foreach($view->result as $result){
					$nids[] = $result->entity;
				}

				$nodes = node_load_multiple($nids);

				foreach($nodes as $node){
					$streetID = $node->field_address['und'][0]['value'];
					$street = entity_load('field_collection_item', array($streetID));
					$street = $street[$streetID]->field_street['und'][0]['safe_value'];

					$status = $node->field_status['und'][0]['value'];
					switch ($status) {
						case '100% vendido':
							$status_type = "label light_green";
						break;
						case 'Ãltimas unidades':
							$status_type = "label yellow";
						break;
						case 'Nuevo':
							$status_type = "label dark_green";
						break;
						case 'MÃ¡s solicitado':
							$status_type = "label blue";
						break;
					}

                                        if ($status_type != 'Ninguno') {
                                                $status = theme('html_tag', array('element' => array('#tag' => 'span','#attributes' => array('class' => $status_type),'#value' => $result->field_field_status[0]['rendered']['#markup'])));
                                        } else {
                                                $status = NULL;
                                        }

					$imageID = $node->field_slide['und'][0]['value']; 
					$image = entity_load('field_collection_item', array($imageID));
					$image = $image[$imageID]->field_image['und'][0];
					$image = theme('image_style', array('style_name' => 'medium_wide', 'path' => $image['uri'], 'alt' => $node->title));

					$widget_search[] = array(
								'title' =>$node->title,
								'street' => $street,
								'image' => $image,
								'status' => $status,
								'destination' => url('node/'.$node->nid),
								);
				}

				$vars['content'] = theme('widget_search', array('widget_search' => $widget_search));

			break;

			case 'widget_custom_card_list':
				$vars['title'] = '';

				foreach ($entity['field_custom_list_card']['#items'] as $key => $card) {

					$eid = $card['entity']->field_address['und'][0]['value'];
					$street = entity_load('field_collection_item', array($eid));
					$street = $street[$eid]->field_street['und'][0]['safe_value'];

					$destination = url('node/'.$card['entity']->nid);

					if (isset($card['entity']->field_thumbnail_image['und'][0])) {
						$image = $card['entity']->field_thumbnail_image['und'][0]['uri'];
					} else {
						$image = 'default_images/tbnl-generica.jpg';
					}
                                        $image = theme('image_style', array('style_name' => 'medium_wide', 'path' => $image, 'alt' => $card['entity']->title));

					if (isset($card['entity']->field_status['und'][0])) {
			                        $status_type = $card['entity']->field_status['und'][0]['value'];
			                        switch ($status_type) {
                        			    case '100% vendido':
			                                $status_type = "label light_green";
                        			        break;
			                            case 'Ãltimas unidades':
                        			        $status_type = "label yellow";
			                                break;
                        			    case 'Nuevo':
			                                $status_type = "label dark_green";
                        			        break;
			                            case 'MÃ¡s solicitado':
                	        		        $status_type = "label blue";
		        	                        break;
			                        }

                                                if ($status_type != 'Ninguno') {
                                                        $status = theme('html_tag', array('element' => array('#tag' => 'span','#attributes' => array('class' => $status_type),'#value' => $result->field_field_status[0]['rendered']['#markup'])));
                                                } else {
                                                        $status = NULL;
                                                }

						drupal_add_js(drupal_get_path('module', 'jarula_widgets') . '/js/widget_slideshow/jquery.flexslider-min.js', array('scope' => 'footer'));
	                                        drupal_add_js(drupal_get_path('module', 'jarula_widgets') . '/js/widget_slideshow/jquery.easing.js', array('scope' => 'footer'));

                    			}

					$widget_custom_card_list[] = array('title' => $card['entity']->title, 'street' => $street, 'image' => $image, 'status' => $status, 'destination' => $destination);

				}

				$vars['content'] = theme('widget_custom_card_list', array('widget_custom_card_list' => $widget_custom_card_list));

			break;

			case 'widget_background_slider':

				$slideArray = $entity['field_background_image']['#items'];

				$vars['title'] = '';

				if (isset($slideArray[0])) {

	                                foreach($slideArray as $slide) {
                                                $image = image_style_url('slider_big', $slide['uri']);

                                                $slideItems[] = array(
                                               	        'image' => $image,
               	                                );
	                                }

                	                drupal_add_css(drupal_get_path('module', 'jarula_widgets') . '/js/camera/css/camera.css');
        	                        drupal_add_js(drupal_get_path('module', 'jarula_widgets') . '/js/camera/scripts/camera.min.js');
	                                drupal_add_js(drupal_get_path('module', 'jarula_widgets') . '/js/camera/scripts/jquery.easing.1.3.js');

        	                        $vars['content'] = theme('widget_background_slider', array('widget_background_slider' => $slideItems));
                	        } else {
                        	        $vars['content'] = 'No hay contenido para mostrar';
	                        }
	
			break;
        	}
	}
}


function jarula_widgets_theme() {

	return array(
		'widget_image' => array(
			'template' => 'widget-image',
			'path' => drupal_get_path('module', 'jarula_widgets') . '/templates',
		),
                'widget_text' => array(
                        'template' => 'widget-text',
                        'path' => drupal_get_path('module', 'jarula_widgets') . '/templates',
                ),
                'widget_profile' => array(
                        'template' => 'widget-profile',
                        'path' => drupal_get_path('module', 'jarula_widgets') . '/templates',
                ),
                'widget_link' => array(
                        'template' => 'widget-link',
                        'path' => drupal_get_path('module', 'jarula_widgets') . '/templates',
                ),
                'widget_itemslist' => array(
                        'template' => 'widget-itemslist',
                        'path' => drupal_get_path('module', 'jarula_widgets') . '/templates',
                ),
                'widget_info' => array(
                        'template' => 'widget-info',
                        'path' => drupal_get_path('module', 'jarula_widgets') . '/templates',
                ),
                'widget_slider' => array(
                        'template' => 'widget-slider',
                        'path' => drupal_get_path('module', 'jarula_widgets') . '/templates',
                ),
                'widget_background_slider' => array(
                        'template' => 'widget-background-slider',
                        'path' => drupal_get_path('module', 'jarula_widgets') . '/templates',
                ),
                'widget_slider_node' => array(
                        'template' => 'widget-slider-node',
                        'path' => drupal_get_path('module', 'jarula_widgets') . '/templates',
                ),
                'widget_form' => array(
                        'template' => 'widget-form',
                        'path' => drupal_get_path('module', 'jarula_widgets') . '/templates',
                ),
                'widget_sketch' => array(
                        'template' => 'widget-sketch',
                        'path' => drupal_get_path('module', 'jarula_widgets') . '/templates',
                ),
                'widget_search' => array(
                        'template' => 'widget-search',
                        'path' => drupal_get_path('module', 'jarula_widgets') . '/templates',
                ),
                'widget_custom_card_list' => array(
                        'template' => 'widget-custom-card-list',
                        'path' => drupal_get_path('module', 'jarula_widgets') . '/templates',
                ),

        );

}
